# This configuration was generated by
# `rubocop --auto-gen-config`
# on 2017-06-07 17:01:06 -0500 using RuboCop version 0.49.1.
# The point is for the user to remove these configuration records
# one by one as the offenses are removed from the code base.
# Note that changes in the inspected code, or installation of new
# versions of RuboCop, may require this file to be generated again.

# Offense count: 9
# Cop supports --auto-correct.
# Configuration parameters: Include, TreatCommentsAsGroupSeparators.
# Include: **/Gemfile, **/gems.rb
# Bundler/OrderedGems:
  # Exclude:
  #   - 'Gemfile'

AllCops:
  TargetRubyVersion: 2.2
  Enabled: false

Layout:
  Enabled: false

Lint:
  Enabled: false

# The entire metrics category is disabled because they almost all depend on
# picking on threshold that is differently useful depending on the tools you
# use. Some of them (eg. line length) aren't sensitive to the consituent parts
# of the code.
Metrics:
  Enabled: false

Naming:
  Enabled: false

# The performance category is pretty usable. It's mostly method choice guidance
# rather than bikeshedding.
Performance:
  Enabled: true

Security:
  Enabled: true

Style:
   Enabled: false

Layout/EmptyLinesAroundClassBody:
 Enabled: false

Layout/EmptyLinesAroundModuleBody:
 Enabled: false

Layout/SpaceAfterMethodName:
 Enabled: false

Layout/SpaceBeforeBlockBraces:
 Enabled: true
 EnforcedStyle: no_space

Layout/SpaceInsideBlockBraces:
  Enabled: true

Layout/SpaceInsideBrackets:
  Enabled: false

Layout/TrailingBlankLines:
  Enabled: false

Layout/TrailingWhitespace:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: false

Lint/AmbiguousBlockAssociation:
  Enabled: false

Lint/AssignmentInCondition:
  Enabled: true

Lint/BlockAlignment:
  Enabled: true

Lint/DuplicateMethods:
  Enabled: true

Lint/HandleExceptions:
  Enabled: true

Lint/UnneededSplatExpansion:
  Enabled: true

# This one is almost always useless. Many simple cases would be caught by
# Performance/PreferredHashMethods and Performance/HashEachMethods anyway.
Lint/UnusedBlockArgument:
  Enabled: false

# Unlike UnusedBlockArgument, this one is generally useful but it gets confused
# often enough that we should not auto-correct it.
Lint/UnusedMethodArgument:
  Enabled: false

Lint/StringConversionInInterpolation:
  Enabled: true

Lint/UselessAccessModifier:
  Enabled: true

# Most of the Performance cops are good but this one suggests a change that can
# yield different results for some data.
Performance/Casecmp:
  Enabled: false

Style/AndOr:
  EnforcedStyle: conditionals

Style/AsciiComments:
  Enabled: true

Style/BracesAroundHashParameters:
  Enabled: true

Style/ClassVars:
  Enabled: false

# This one should be enabled but it's too noisy for now.
Style/Documentation:
  Enabled: false
  Exclude:
    - app/models/*.rb

Style/EmptyElse:
  Enabled: true
  EnforcedStyle: empty

Style/EmptyLiteral:
  Enabled: false

Style/GuardClause:
  Enabled: true
  MinBodyLength: 5

Style/HashSyntax:
  Enabled: true
  EnforcedStyle: ruby19

Style/IfUnlessModifier:
  Enabled: false

Style/InverseMethods:
  Enabled: true

Style/NumericPredicate:
  Enabled: false

Style/PreferredHashMethods:
  Enabled: false

Style/RedundantBegin:
  Enabled: false

# This one is conceptually good but really not helping anything
Style/RedundantReturn:
  Enabled: false

Style/StringLiterals:
  Enabled: true

Style/SymbolArray:
  Enabled: false

Style/TrailingCommaInArguments:
  Enabled: false

Style/TrailingCommaInLiteral:
  Enabled: false

Style/UnneededInterpolation:
  Enabled: true

# Cop supports --auto-correct.
Style/UnneededPercentQ:
  Exclude:
    # - 'config/deploy/recipes/assets.rb'

# Configuration parameters: SupportedStyles.
# SupportedStyles: snake_case, camelCase
Style/VariableName:
  EnforcedStyle: snake_case

Style/WordArray:
  Enabled: false
